package unsolved.category.gold5.Descending_BOJ2096_;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		int N = Integer.parseInt(br.readLine());
		int i, j;
		int ansMax = 0;
		int ansMin = 0;
		int[] in = new int[3];
		int[] minDp = new int[3];
		int[] maxDp = new int[3];
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		for (j = 0; j < 3; j++) {
			in[j] = Integer.parseInt(st.nextToken());
			minDp[i] = in[0];
			maxDp[i] = in[0];
		}

		if (N > 1) {
			for (i = 1; i < N; i++) {
				st = new StringTokenizer(br.readLine(), " ");
				for (j = 0; j < 3; j++) {
					in[j] = Integer.parseInt(st.nextToken());
				}
				minDp[0] = in[0] + min2(minDp[0], minDp[1]);
				minDp[1] = in[1] + min3(minDp[0], minDp[1], minDp[2]);
				minDp[2] = in[2] + min2(minDp[1], minDp[2]);
				maxDp[0] = in[0] + max2(maxDp[0], maxDp[1]);
				maxDp[1] = in[1] + max3(maxDp[0], maxDp[1], maxDp[2]);
				maxDp[2] = in[2] + max2(maxDp[1], maxDp[2]);
			}
		}
		ansMin = min3(minDp[0], minDp[1], minDp[2]);
		ansMax = max3(maxDp[0], maxDp[1], maxDp[2]);
		sb.append(ansMax).append(' ').append(ansMin);
		System.out.println(sb);
	}

	static int min2(int a, int b) {
		return a < b ? a : b;
	}

	static int min3(int a, int b, int c) {
		a = a < b ? a : b;
		return a < c ? a : c;
	}

	static int max2(int a, int b) {
		return a > b ? a : b;
	}

	static int max3(int a, int b, int c) {
		a = a > b ? a : b;
		return a > c ? a : c;
	}
}
