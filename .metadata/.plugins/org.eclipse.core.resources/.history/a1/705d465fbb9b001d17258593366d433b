package unsolved.category.gold5.Descending_BOJ2096_;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		int i, j;
		int[] in = new int[3];
		int[][] minDp = new int[2][3];
		int[][] maxDp = new int[2][3];
		int N = Integer.parseInt(br.readLine());
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		for (i = 0; i < 3; i++) {
			in[i] = Integer.parseInt(st.nextToken());
			minDp[1][i] = in[i];
			maxDp[1][i] = in[i];
		}
//		System.out.println("min: " + Arrays.toString(minDp[1]));
//		System.out.println("max: " + Arrays.toString(maxDp[1]));
//		System.out.println();

		if (N > 1) {
			for (i = 1; i < N; i++) {
				st = new StringTokenizer(br.readLine(), " ");
				for (j = 0; j < 3; j++) {
					in[j] = Integer.parseInt(st.nextToken());
					minDp[0][j] = minDp[1][j];
					maxDp[0][j] = maxDp[1][j];
				}
				minDp[1][0] = in[0] + Math.min(minDp[0][0], minDp[0][1]);
				minDp[1][1] = in[1] + Math.min(Math.min(minDp[0][0], minDp[0][1]), minDp[0][2]);
				maxDp[1][1] = in[1] + Math.max(Math.max(maxDp[0][0], maxDp[0][1]), maxDp[0][2]);
				minDp[1][2] = in[2] + Math.min(minDp[0][1], minDp[0][2]);
				maxDp[1][0] = in[0] + Math.max(maxDp[0][0], maxDp[0][1]);
				maxDp[1][2] = in[2] + Math.max(maxDp[0][1], maxDp[0][2]);
//				System.out.println("min: " + Arrays.toString(minDp[1]));
//				System.out.println("max: " + Arrays.toString(maxDp[1]));
//				System.out.println();
			}
		}
		int ansMin = min3(minDp[1][0], minDp[1][1], minDp[1][2]);
		int ansMax = max3(maxDp[1][0], maxDp[1][1], maxDp[1][2]);
		sb.append(ansMax).append(' ').append(ansMin);
		System.out.println(sb);
	}

//	static int min2(int a, int b) {
//		return a < b ? a : b;
//	}
//
//	static int min3(int a, int b, int c) {
//		a = a < b ? a : b;
//		return a < c ? a : c;
//	}
//
//	static int max2(int a, int b) {
//		return a > b ? a : b;
//	}
//
//	static int max3(int a, int b, int c) {
//		a = a > b ? a : b;
//		return a > c ? a : c;
//	}
}
